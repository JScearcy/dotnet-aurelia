{"version":3,"sources":["app.ts","environment.ts","const/gh-urls.ts","services/http-service.ts","gh-search.ts","main.ts","followers/gh-followers.ts","following/gh-following.ts","gists/gh-gists.ts","resources/index.ts","/Users/Jakes/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/app.html","/Users/Jakes/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/gh-search.html","/Users/Jakes/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/followers/gh-followers.html","/Users/Jakes/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/following/gh-following.html","/Users/Jakes/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/gists/gh-gists.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class GhUrls {\n    public SingleUser = \"/api/github/singleuser?username=\";\n    public Followers = \"/api/github/followers?username=\";\n    public Following = \"/api/github/following?username=\";\n    public Gists = \"/api/github/gists?username=\";\n}","import {HttpClient} from 'aurelia-http-client';\nimport {inject} from 'aurelia-framework';\nimport {GhUrls} from '../const/gh-urls';\n\nexport class HttpService {\n    static inject() { return [HttpClient, GhUrls] };\n\n    constructor(private http: HttpClient, private urls: GhUrls) {}\n\n    public getUser(username: string) {\n        return this.fetchApiItem(this.urls.SingleUser, username);\n    }\n\n    public getFollowers(username: string) {\n        return this.fetchApiItem(this.urls.Followers, username);\n    }\n\n    public getFollowing(username: string) {\n        return this.fetchApiItem(this.urls.Following, username);\n    }\n\n    public getGists(username: string) {\n        return this.fetchApiItem(this.urls.Gists, username);\n    }\n\n    public fetchApiItem(url: string, username: string) {\n        return this.http.get(url + username)\n            .then(res => JSON.parse(res.response));\n    }\n}","import {HttpService} from \"./services/http-service\";\nimport {inject} from \"aurelia-framework\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\n\nexport class GhSearch {\n    static inject() { return [HttpService, EventAggregator] }\n\n    private displayUser: boolean = false;\n    private user;\n    private username: string;\n    private successCount: number = 0;\n    private failCount: number = 0;\n    \n    constructor(private httpService: HttpService, private ea: EventAggregator) {}\n\n    public ghSearch() {\n        this.ea.publish(\"gh-search\", this.username);\n        this.displayUser = false;\n        this.httpService.getUser(this.username)\n            .then(userInfo => {\n                this.user = userInfo;\n                this.displayUser = true;\n                this.successCount++;\n            })\n            .catch(err => {\n                this.failCount++;\n                console.error(err);\n            });\n    }\n}","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {HttpService} from \"../services/http-service\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {inject} from \"aurelia-framework\";\n\nexport class GhFollowers {\n    static inject() { return [HttpService, EventAggregator] }\n\n    private followers;\n\n    constructor(private httpService: HttpService, private ea: EventAggregator) {\n        this.ea.subscribe(\"gh-search\", username => {\n            this.followers = [];\n            this.httpService.getFollowers(username)\n                .then(followers => this.followers = followers);\n        });\n    }\n}","import {HttpService} from \"../services/http-service\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {inject} from \"aurelia-framework\";\n\nexport class GhFollowing {\n    static inject() { return [HttpService, EventAggregator] }\n\n    private followings;\n\n    constructor(private httpService: HttpService, private ea: EventAggregator) {\n        this.ea.subscribe(\"gh-search\", username => {\n            this.followings = [];\n            this.httpService.getFollowing(username)\n                .then(followers => this.followings = followers);\n        });\n    }\n}","import {HttpService} from \"../services/http-service\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {inject} from \"aurelia-framework\";\n\nexport class GhGists {\n    static inject() { return [HttpService, EventAggregator] }\n\n    private gists;\n\n    constructor(private httpService: HttpService, private ea: EventAggregator) {\n        this.ea.subscribe(\"gh-search\", username => {\n            this.gists = [];\n            this.httpService.getGists(username)\n                .then(gists => {\n                    gists.map(gist => {\n                        gist.fileString = \"\";\n                        for (let key in gist.files)\n                        {\n                            gist.fileString += key + \"; \";\n                        }\n                        return gist\n                    })\n                    this.gists = gists\n                });\n        });\n    }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null],"sourceRoot":"../aurelia-app/src"}