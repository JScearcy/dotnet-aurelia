{"version":3,"sources":["app.ts","environment.ts","services/http-service.ts","gh-search.ts","main.ts","followers/gh-followers.ts","resources/index.ts","c:/Users/JacobS/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/app.html","c:/Users/JacobS/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/gh-search.html","c:/Users/JacobS/Projects/dotnet-aurelia/wwwroot/aurelia-app/src/followers/gh-followers.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n}\r\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import {HttpClient} from 'aurelia-http-client';\r\nimport {inject} from 'aurelia-framework';\r\n\r\nexport class HttpService {\r\n    static inject() { return [HttpClient] };\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public getUser(username: string) {\r\n        return this.http.get(\"/api/github/singleuser?username=\" + username)\r\n            .then(res => JSON.parse(JSON.parse(res.response)));\r\n    }\r\n\r\n    public getFollowers(username: string) {\r\n        return this.http.get(\"/api/github/followers?username=\" + username)\r\n            .then(res => JSON.parse(JSON.parse(res.response)));\r\n    }\r\n}","import {HttpService} from \"./services/http-service\";\r\nimport {inject} from \"aurelia-framework\";\r\nimport {EventAggregator} from \"aurelia-event-aggregator\";\r\n\r\nexport class GhSearch {\r\n    static inject() { return [HttpService, EventAggregator] }\r\n\r\n    private displayUser: boolean = false;\r\n    private user;\r\n    private username: string;\r\n    private successCount: number = 0;\r\n    private failCount: number = 0;\r\n    \r\n    constructor(private httpService: HttpService, private ea: EventAggregator) {}\r\n\r\n    public ghSearch() {\r\n        this.httpService.getUser(this.username)\r\n            .then(userInfo => {\r\n                this.user = userInfo;\r\n                this.displayUser = true;\r\n                this.ea.publish(\"gh-search\", userInfo);\r\n                this.successCount++;\r\n            })\r\n            .catch(err => {\r\n                this.displayUser = false;\r\n                this.failCount++;\r\n                console.error(err);\r\n            });\r\n    }\r\n}","import {Aurelia} from 'aurelia-framework'\r\nimport environment from './environment';\r\n\r\n//Configure Bluebird Promises.\r\n//Note: You may want to use environment-specific configuration.\r\n(<any>Promise).config({\r\n  warnings: {\r\n    wForgottenReturn: false\r\n  }\r\n});\r\n\r\nexport function configure(aurelia: Aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","import {HttpService} from \"../services/http-service\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {inject} from \"aurelia-framework\";\n\nexport class GhFollowers {\n    static inject() { return [HttpService, EventAggregator] }\n\n    private followers;\n\n    constructor(private httpService: HttpService, private ea: EventAggregator) {\n        this.ea.subscribe(\"gh-search\", user => {\n            this.followers = [];\n            this.httpService.getFollowers(user.login)\n                .then(followers => this.followers = followers);\n        });\n    }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\r\n\r\nexport function configure(config: FrameworkConfiguration) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null,null],"sourceRoot":"..\\aurelia-app\\src"}